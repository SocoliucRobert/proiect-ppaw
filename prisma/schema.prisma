generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model answers {
  id           Int            @id @default(autoincrement())
  question_id  Int?
  answer_text  String?
  is_correct   Boolean?       @default(false)
  questions    questions?     @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  quiz_results quiz_results[]
}

model contact {
  id           Int       @id @default(autoincrement())
  first_name   String?   @db.VarChar(100)
  last_name    String?   @db.VarChar(100)
  email        String?   @db.VarChar(255)
  phone_number String?   @db.VarChar(20)
  message      String?
  created_at   DateTime? @default(now()) @db.Timestamp(6)
}

model questions {
  id            Int            @id @default(autoincrement())
  category      String?        @db.VarChar(50)
  question_text String?
  image_url     String?        @db.VarChar(255)
  answers       answers[]
  quiz_results  quiz_results[]
}

model quiz_results {
  id                 Int        @id @default(autoincrement())
  quiz_id            Int?
  question_id        Int?
  selected_answer_id Int?
  is_correct         Boolean?
  questions          questions? @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  quizzes            quizzes?   @relation(fields: [quiz_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  answers            answers?   @relation(fields: [selected_answer_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model quizzes {
  id              Int            @id @default(autoincrement())
  user_id         Int?
  score           Int?
  total_questions Int?
  correct_answers Int?
  started_at      DateTime?      @default(now()) @db.Timestamptz(6)
  finished_at     DateTime?      @db.Timestamptz(6)
  quiz_results    quiz_results[]
  users           users?         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model subscriptions {
  id              Int      @id @default(autoincrement())
  name            String?  @db.VarChar(50)
  price           Decimal? @db.Decimal(10, 2)
  duration_months Int?
  description     String?
}

model test_table {
  id   Int     @id @default(autoincrement())
  name String?
}

model users {
  id       Int       @id @default(autoincrement())
  username String?   @unique @db.VarChar(50)
  email    String?   @unique @db.VarChar(100)
  quizzes  quizzes[]
}
